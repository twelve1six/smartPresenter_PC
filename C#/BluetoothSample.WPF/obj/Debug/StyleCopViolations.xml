<StyleCopViolations>
  <Violation Section="Root.BluetoothSample.Views.MyBTServer" LineNumber="6" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyBTServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyBTServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.BluetoothSample.Views" LineNumber="4" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyBTServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.BluetoothSample.Views.MyBTServer" LineNumber="6" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyBTServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.BluetoothSample.Views" LineNumber="4" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyBTServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.BluetoothSample.Views.MyBTServer" LineNumber="6" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyBTServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.BluetoothSample.Views.MyBTServer" LineNumber="6" StartLine="6" StartColumn="28" EndLine="6" EndColumn="29" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyBTServer.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CodeMustNotContainMultipleWhitespaceInARow" RuleId="SA1025">The code contains multiple spaces in a row. Only one space is needed.</Violation>
  <Violation LineNumber="1" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="74" StartLine="74" StartColumn="18" EndLine="74" EndColumn="19" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CommentsMustContainText" RuleId="SA1120">The comment is empty. Add text to the comment or remove it.</Violation>
  <Violation LineNumber="3" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives" RuleId="SA1208">System using directives must be placed before all other using directives.</Violation>
  <Violation LineNumber="7" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="9" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="10" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="16" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="18" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="34" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ChainedStatementBlocksMustNotBePrecededByBlankLine" RuleId="SA1510">An else, catch, or finally statement must not be preceded by a blank line.</Violation>
  <Violation LineNumber="41" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ChainedStatementBlocksMustNotBePrecededByBlankLine" RuleId="SA1510">An else, catch, or finally statement must not be preceded by a blank line.</Violation>
  <Violation LineNumber="18" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: handleGETRequest.</Violation>
  <Violation LineNumber="46" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'int' rather than Int32 or System.Int32.</Violation>
  <Violation LineNumber="56" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="56" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementMustNotBeOnSingleLine" RuleId="SA1502">The method must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation LineNumber="56" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: handlePOSTRequest.</Violation>
  <Violation LineNumber="59" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="66" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="69" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MyHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="1" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="8" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation LineNumber="10" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="15" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="16" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="12" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="13" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="17" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="35" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="StatementMustNotBeOnSingleLine" RuleId="SA1501">A statement containing curly brackets must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation LineNumber="18" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation LineNumber="35" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation LineNumber="40" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="48" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="StatementMustNotBeOnSingleLine" RuleId="SA1501">A statement containing curly brackets must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation LineNumber="48" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation LineNumber="60" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="66" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="StatementMustNotBeOnSingleLine" RuleId="SA1501">A statement containing curly brackets must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation LineNumber="66" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\PowerpointController.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation LineNumber="1" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="12" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="298" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="299" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainBlankLinesAtEndOfFile" RuleId="SA1518">The code must not contain blank lines at the end of the file.</Violation>
  <Violation LineNumber="299" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="15" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation LineNumber="277" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="278" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="296" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation LineNumber="17" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="30" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="39" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="19" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="19" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FieldsMustBePrivate" RuleId="SA1401">Fields must be declared with private access. Use properties to expose fields.</Violation>
  <Violation LineNumber="19" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="AccessibleFieldsMustBeginWithUpperCaseLetter" RuleId="SA1307">Public and internal fields must start with an upper-case letter: socket.</Violation>
  <Violation LineNumber="20" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="20" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FieldsMustBePrivate" RuleId="SA1401">Fields must be declared with private access. Use properties to expose fields.</Violation>
  <Violation LineNumber="20" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="AccessibleFieldsMustBeginWithUpperCaseLetter" RuleId="SA1307">Public and internal fields must start with an upper-case letter: srv.</Violation>
  <Violation LineNumber="136" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ConstantsMustAppearBeforeFields" RuleId="SA1203">All constants must be placed before all non-constants.</Violation>
  <Violation LineNumber="23" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="23" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FieldsMustBePrivate" RuleId="SA1401">Fields must be declared with private access. Use properties to expose fields.</Violation>
  <Violation LineNumber="23" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="AccessibleFieldsMustBeginWithUpperCaseLetter" RuleId="SA1307">Public and internal fields must start with an upper-case letter: outputStream.</Violation>
  <Violation LineNumber="25" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="25" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FieldsMustBePrivate" RuleId="SA1401">Fields must be declared with private access. Use properties to expose fields.</Violation>
  <Violation LineNumber="25" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotContainUnderscore" RuleId="SA1310">Field names must not contain underscores.</Violation>
  <Violation LineNumber="25" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="AccessibleFieldsMustBeginWithUpperCaseLetter" RuleId="SA1307">Public and internal fields must start with an upper-case letter: http_method.</Violation>
  <Violation LineNumber="25" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'string' rather than String or System.String.</Violation>
  <Violation LineNumber="26" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="26" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FieldsMustBePrivate" RuleId="SA1401">Fields must be declared with private access. Use properties to expose fields.</Violation>
  <Violation LineNumber="26" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotContainUnderscore" RuleId="SA1310">Field names must not contain underscores.</Violation>
  <Violation LineNumber="26" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="AccessibleFieldsMustBeginWithUpperCaseLetter" RuleId="SA1307">Public and internal fields must start with an upper-case letter: http_url.</Violation>
  <Violation LineNumber="26" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'string' rather than String or System.String.</Violation>
  <Violation LineNumber="27" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="27" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FieldsMustBePrivate" RuleId="SA1401">Fields must be declared with private access. Use properties to expose fields.</Violation>
  <Violation LineNumber="27" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotContainUnderscore" RuleId="SA1310">Field names must not contain underscores.</Violation>
  <Violation LineNumber="27" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="AccessibleFieldsMustBeginWithUpperCaseLetter" RuleId="SA1307">Public and internal fields must start with an upper-case letter: http_protocol_versionstring.</Violation>
  <Violation LineNumber="27" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'string' rather than String or System.String.</Violation>
  <Violation LineNumber="28" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="28" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FieldsMustBePrivate" RuleId="SA1401">Fields must be declared with private access. Use properties to expose fields.</Violation>
  <Violation LineNumber="28" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="AccessibleFieldsMustBeginWithUpperCaseLetter" RuleId="SA1307">Public and internal fields must start with an upper-case letter: httpHeaders.</Violation>
  <Violation LineNumber="31" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotContainUnderscore" RuleId="SA1310">Field names must not contain underscores.</Violation>
  <Violation LineNumber="31" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustBeginWithLowerCaseLetter" RuleId="SA1306">Variable names and private field names must start with a lower-case letter: MAX_POST_SIZE.</Violation>
  <Violation LineNumber="33" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="47" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="StatementMustNotBeOnSingleLine" RuleId="SA1501">A statement containing curly brackets must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation LineNumber="48" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="StatementMustNotBeOnSingleLine" RuleId="SA1501">A statement containing curly brackets must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation LineNumber="49" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="StatementMustNotBeOnSingleLine" RuleId="SA1501">A statement containing curly brackets must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation LineNumber="40" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: streamReadLine.</Violation>
  <Violation LineNumber="49" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation LineNumber="49" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainEmptyStatements" RuleId="SA1106">The code contains an extra semicolon.</Violation>
  <Violation LineNumber="43" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseStringEmptyForEmptyStrings" RuleId="SA1122">Use string.Empty rather than "".</Violation>
  <Violation LineNumber="54" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="81" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="54" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: process.</Violation>
  <Violation LineNumber="82" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation LineNumber="86" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="86" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: parseRequest.</Violation>
  <Violation LineNumber="88" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'string' rather than String or System.String.</Violation>
  <Violation LineNumber="101" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="101" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: readHeaders.</Violation>
  <Violation LineNumber="104" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'string' rather than String or System.String.</Violation>
  <Violation LineNumber="107" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseStringEmptyForEmptyStrings" RuleId="SA1122">Use string.Empty rather than "".</Violation>
  <Violation LineNumber="118" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'string' rather than String or System.String.</Violation>
  <Violation LineNumber="131" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="131" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: handleGETRequest.</Violation>
  <Violation LineNumber="136" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotContainUnderscore" RuleId="SA1310">Field names must not contain underscores.</Violation>
  <Violation LineNumber="137" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="143" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="184" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation LineNumber="137" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: handlePOSTRequest.</Violation>
  <Violation LineNumber="154" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'string' rather than String or System.String.</Violation>
  <Violation LineNumber="186" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="186" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: writeSuccess.</Violation>
  <Violation LineNumber="191" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseStringEmptyForEmptyStrings" RuleId="SA1122">Use string.Empty rather than "".</Violation>
  <Violation LineNumber="194" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="194" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: writeFailure.</Violation>
  <Violation LineNumber="198" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseStringEmptyForEmptyStrings" RuleId="SA1122">Use string.Empty rather than "".</Violation>
  <Violation LineNumber="202" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="203" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation LineNumber="202" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FileMayOnlyContainASingleClass" RuleId="SA1402">A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</Violation>
  <Violation LineNumber="205" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="205" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FieldsMustBePrivate" RuleId="SA1401">Fields must be declared with private access. Use properties to expose fields.</Violation>
  <Violation LineNumber="206" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="207" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="207" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotContainUnderscore" RuleId="SA1310">Field names must not contain underscores.</Violation>
  <Violation LineNumber="209" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="214" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="214" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: listen.</Violation>
  <Violation LineNumber="216" StartLine="216" StartColumn="14" EndLine="216" EndColumn="59" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="229" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="229" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: handleGETRequest.</Violation>
  <Violation LineNumber="230" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="230" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: handlePOSTRequest.</Violation>
  <Violation LineNumber="233" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="275" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation LineNumber="235" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="239" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="240" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation LineNumber="239" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: handleGETRequest.</Violation>
  <Violation LineNumber="263" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="273" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation LineNumber="263" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\SimpleHttpServer.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: handlePOSTRequest.</Violation>
  <Violation Section="Root.BluetoothSample.ViewModel.ReceiverViewModel" LineNumber="22" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\ViewModel\ReceiverViewModel.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationHeadersMustNotContainBlankLines" RuleId="SA1644">The documentation header must not contain blank lines. Use the 'para' tag to insert line breaks within documentation text.</Violation>
  <Violation Section="Root.BluetoothSample.ViewModel.ReceiverViewModel" LineNumber="19" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\ViewModel\ReceiverViewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementDocumentationHeadersMustNotBeFollowedByBlankLine" RuleId="SA1506">A documentation header line must not be followed by a blank line.</Violation>
  <Violation Section="Root.BluetoothSample.ViewModel.ReceiverViewModel" LineNumber="24" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\ViewModel\ReceiverViewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.BluetoothSample.ViewModel.ReceiverViewModel.ResetAll%Message" LineNumber="76" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\ViewModel\ReceiverViewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.BluetoothSample.ViewModel.ReceiverViewModel" LineNumber="79" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\ViewModel\ReceiverViewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.BluetoothSample.ViewModel.ReceiverViewModel" LineNumber="80" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\ViewModel\ReceiverViewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="11" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="12" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="13" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="14" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="15" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="16" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="17" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="18" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="19" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="20" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="21" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="22" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="23" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="24" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="25" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="26" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="28" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives" RuleId="SA1208">System using directives must be placed before all other using directives.</Violation>
  <Violation LineNumber="28" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="43" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationHeadersMustNotContainBlankLines" RuleId="SA1644">The documentation header must not contain blank lines. Use the 'para' tag to insert line breaks within documentation text.</Violation>
  <Violation LineNumber="40" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementDocumentationHeadersMustNotBeFollowedByBlankLine" RuleId="SA1506">A documentation header line must not be followed by a blank line.</Violation>
  <Violation LineNumber="45" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="47" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="48" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="50" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="50" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: btnOpenClicked.</Violation>
  <Violation LineNumber="59" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="61" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="62" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="66" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="72" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="74" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="AllAccessorsMustBeMultiLineOrSingleLine" RuleId="SA1504">An accessor can only be placed on a single line if all of the accessors in the property are placed on a single line.</Violation>
  <Violation LineNumber="87" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="94" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation LineNumber="96" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="96" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="100" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="108" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="StatementMustNotBeOnSingleLine" RuleId="SA1501">A statement containing curly brackets must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation LineNumber="118" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="StatementMustNotBeOnSingleLine" RuleId="SA1501">A statement containing curly brackets must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation LineNumber="108" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation LineNumber="118" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation LineNumber="122" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\Views\ReceiverView.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="11" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="12" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="13" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="14" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="15" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="16" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="17" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="18" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="19" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="20" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="21" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="22" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="23" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="24" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="25" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="26" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="28" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives" RuleId="SA1208">System using directives must be placed before all other using directives.</Violation>
  <Violation LineNumber="28" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation LineNumber="43" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationHeadersMustNotContainBlankLines" RuleId="SA1644">The documentation header must not contain blank lines. Use the 'para' tag to insert line breaks within documentation text.</Violation>
  <Violation LineNumber="44" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementParametersMustBeDocumented" RuleId="SA1611">The documentation header must contain param tags matching the element's parameter list.</Violation>
  <Violation LineNumber="51" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation LineNumber="44" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="44" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: btnOpenClicked.</Violation>
  <Violation LineNumber="54" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="1" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\obj\Debug\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\obj\Debug\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="C:\Users\ben\Desktop\How to send data through Bluetooth in a WPF application using 32feet.Net (2)\C#\BluetoothSample.WPF\obj\Debug\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
</StyleCopViolations>